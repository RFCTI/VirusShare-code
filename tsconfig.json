{
  "compilerOptions": {
    /* 基本选项 */
    "target": "es5",                          // 指定 ECMAScript 目标版本: 'ES3' (默认), 'ES5', 'ES6'/'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', 或 'ESNEXT'
    "module": "commonjs",                     // 指定模块代码生成: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', 或 'ESNext'
    "lib": ["dom", "dom.iterable", "esnext"], // 指定要包含在编译中的库文件
    "allowJs": true,                          // 允许编译 javascript 文件
    "checkJs": false,                         // 报告 javascript 文件中的错误
    "jsx": "react",                           // 指定 JSX 代码的生成: 'preserve', 'react-native', 或 'react'
    "declaration": true,                      // 生成相应的 '.d.ts' 文件
    "sourceMap": true,                        // 生成相应的 '.map' 文件
    "outDir": "./dist",                       // 将输出文件重定向到 'dist' 文件夹
    "rootDir": "./src",                       // 仅用于控制输出的目录结构 --outDir

    /* 严格的类型检查选项 */
    "strict": true,                           // 启用所有严格类型检查选项
    "noImplicitAny": true,                    // 在表达式和声明上有隐含的 'any' 类型时报错
    "strictNullChecks": true,                 // 启用严格的 null 检查
    "strictFunctionTypes": true,              // 禁用函数参数双向协变检查
    "strictBindCallApply": true,              // 严格的 'bind', 'call', 和 'apply' 方法使用
    "strictPropertyInitialization": true,     // 严格检查类属性初始化
    "noImplicitThis": true,                   // 当 'this' 表达式的值为 'any' 类型的时候，生成一个错误

    /* 其他检查 */
    "noUnusedLocals": true,                   // 报告文件中未使用的局部变量错误
    "noUnusedParameters": true,               // 报告函数中未使用的参数错误
    "noImplicitReturns": true,                // 不允许函数没有返回值
    "noFallthroughCasesInSwitch": true,       // 报告 switch 语句的 fallthrough 错误（即，不允许 switch 的 case 语句贯穿）

    /* 模块解析选项 */
    "moduleResolution": "node",               // 选择模块解析策略: 'node' (Node.js) 或 'classic' (TypeScript pre-1.6)
    "baseUrl": "./",                          // 用于解析非相对模块名称的基目录
    "paths": {},                              // 一个系列的条目，它重新映射模块
    "rootDirs": [],                           // 根文件夹列表，其组合内容表示项目运行时的结构内容
    "typeRoots": [],                          // 包含类型声明的文件列表
    "types": [],                              // 需要包含的类型声明文件名列表
    "allowSyntheticDefaultImports": true,     // 允许从没有默认导出的模块中默认导入

    /* Source Map Options */
    "sourceRoot": "",                         // 指定调试器应该找到 TypeScript 文件而不是源文件的位置
    "mapRoot": "",                            // 指定调试器应该找到映射文件而不是生成文件的位置
    "inlineSourceMap": false,                 // 生成单个 sourcemaps 文件，而不是将 sourcemaps 生成为单独的文件
    "inlineSources": false,                   // 将代码和 sourcemaps 生成到一个文件中，要求同时设置了 --inlineSourceMap 或 --sourceMap 属性

    /* 实验性选项 */
    "experimentalDecorators": true,           // 为装饰器启用实验性支持
    "emitDecoratorMetadata": true             // 为装饰器提供元数据的实验性支持
  },
  "include": [
    "./src/**/*" // 指定要包含在编译中的文件
  ],
  "exclude": [
    "node_modules", // 指定要从编译中排除的文件
    "**/*.spec.ts"
  ]
}
